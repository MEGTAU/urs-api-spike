openapi: 3.0.0
info:
  title: Universal Relationship Service API
  version: 1.0.0
  description: |
    API for the Universal Relationship Service, providing a unified view of contacts and their relationships.

    Individual operations are provided for contact sub-resources to provide a simple mechanism to edit data without having to deal with the entire contact object.

    Bulk operations have been included for contact sub-resources that may be generated using a batch extract or analysis process.

    The API structured to implemented gradually. For example, external system integrations will be implemented after the first release. An HTTP 501 (Not implemented) response will be returned for API methods that are not yet implemented.
    
    ### **Usage of Upsert Approach**
    
    The upsert approach is used to either create or update records like contacts or organisations. This pattern uses a single **PUT** request to either create a new resource or update an existing one. 
    
    3. **Creation or Update:**  
    * If the record does not exist, the server creates a new record. The response should be a `201 Created` status code.  
    * If the record does exist, the server updates the existing record with the new data. The response should be a `200 OK` or `204 No Content` status code.
    
    **Advantages:**
    * Simpler Client Logic: The client doesn't need to perform a preliminary `GET` request to check for the resource's existence. It can simply use a single `PUT` request.  
    * Idempotent: The `PUT` method is **idempotent**, meaning that multiple identical requests will have the same effect as a single request. This is a key principle of RESTful design.


servers:
  - url: http://localhost:8080/api/v1
paths:
  /contacts:
    $ref: './contacts.yaml#/paths/~1contacts'
  /contacts/bulk:
    $ref: './contacts.yaml#/paths/~1contacts~1bulk'
  /contacts/merge:
    $ref: './contacts.yaml#/paths/~1contacts~1merge'
  /contacts/{contactId}:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}'
  /contacts/{contactId}/disclosure-settings:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1disclosure-settings'
  /contacts/{contactId}/communication-preferences:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1communication-preferences'
  /contacts/{contactId}/communication-preferences/{preferenceId}:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1communication-preferences~1{preferenceId}'
  /contacts/{contactId}/contact-information:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1contact-information'
  /contacts/{contactId}/contact-information/{infoId}:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1contact-information~1{infoId}'
  /contacts/{contactId}/roles:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1roles'
  /contacts/{contactId}/roles/{roleId}:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1roles~1{roleId}'
  /contacts/{contactId}/analyses:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1analyses'
  /contacts/{contactId}/analyses/bulk:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1analyses~1bulk'
  /contacts/{contactId}/analyses/{analysisId}:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1analyses~1{analysisId}'
  /contacts/{contactId}/system-links:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1system-links'
  /contacts/{contactId}/system-links/bulk:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1system-links~1bulk'
  /contacts/{contactId}/system-links/{linkId}:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1system-links~1{linkId}'
  /contacts/{contactId}/documents:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1documents'
  /contacts/{contactId}/documents/bulk:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1documents~1bulk'
  /contacts/{contactId}/documents/{documentId}:
    $ref: './contacts.yaml#/paths/~1contacts~1{contactId}~1documents~1{documentId}'
  /relationships:
    $ref: './relationships.yaml#/paths/~1relationships'
  /relationships/bulk:
    $ref: './relationships.yaml#/paths/~1relationships~1bulk'
  /relationships/{relationshipId}:
    $ref: './relationships.yaml#/paths/~1relationships~1{relationshipId}'
  /organisations:
    $ref: './organisations.yaml#/paths/~1organisations'
  /organisations/bulk:
    $ref: './organisations.yaml#/paths/~1organisations~1bulk'
  /organisations/{organisationId}:
    $ref: './organisations.yaml#/paths/~1organisations~1{organisationId}'
  /interactions:
    $ref: './interactions.yaml#/paths/~1interactions'
  /interactions/bulk:
    $ref: './interactions.yaml#/paths/~1interactions~1bulk'
  /anonymised-contacts/{contactId}:
    get:
      summary: Get an anonymised contact by ID
      description: Provide access of to contact information with no PII included. Can be used to to control access to PII alongside roles and permissions
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Anonymised contact information.
        '404':
          description: Contact not found
  /synced-records:
    get:
      summary: Get all synced records
      description: A record synced from an external system, identified by the system link, by background processing
      responses:
        '200':
          description: A list of synced records.
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/SyncedRecordList'
    post:
      summary: Create a synced record
      description: A record synced from an external system, identified by the system link, by background processing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './components.yaml#/components/schemas/SyncedRecord'
      responses:
        '201':
          description: Synced record created
  /synced-records/bulk:
    post:
      summary: Bulk create synced records
      description: A record synced from an external system, identified by the system link, by background processing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: './components.yaml#/components/schemas/SyncedRecord'
      responses:
        '201':
          description: Synced records created
    put:
      summary: Bulk update synced records
      description: A record synced from an external system, identified by the system link, by background processing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: './components.yaml#/components/schemas/SyncedRecord'
      responses:
        '200':
          description: Synced records updated
  /synced-records/{recordId}:
    get:
      summary: Get a synced record by ID
      description: A record synced from an external system, identified by the system link, by background processing
      parameters:
        - name: recordId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A single synced record.
          content:
            application/json:
              schema:
                $ref: './components.yaml#/components/schemas/SyncedRecord'
        '404':
          description: Synced record not found
    put:
      summary: Update a synced record
      description: A record synced from an external system, identified by the system link, by background processing
      parameters:
        - name: recordId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './components.yaml#/components/schemas/SyncedRecord'
      responses:
        '200':
          description: Synced record updated
        '404':
          description: Synced record not found
    delete:
      summary: Delete a synced record
      description: A record synced from an external system, identified by the system link, by background processing
      parameters:
        - name: recordId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Synced record deleted
        '404':
          description: Synced record not found
components:
  schemas:
    Contact:
      type: object
      description: Represents an individual. Note that specifying meaning included fields may require multiple joins so consider performance implications.
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        firstName:
          type: string
          example: First
        middleName:
          type: string
          example: Middle
        lastName:
          type: string
          example: Last
        cdpUserId:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        createdAt:
          type: string
          format: date-time
          example: '2023-06-15T10:00:00Z'
        lastSeenAt:
          type: string
          format: date-time
          example: '2024-07-01T12:30:00Z'
        USI:
          type: string
          example: "1234567890"
        LUI:
          type: string
          example: "1234567890"
        TFN:
          type: string
          example: "123456789"
        VSN:
          type: string
          example: "123456789"
        WorkReadyParticipantNumber:
          type: string
          example: "123456789"
        SACEStudentID:
          type: string
          example: "123456A"
        contactInformation:
          type: array
          items:
            $ref: '#/components/schemas/ContactInformation'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        memberships:
          type: array
          items:
            type: object
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
        systemsLinks:
          type: array
          items:
            $ref: '#/components/schemas/SystemLink'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        analyses:
          type: array
          items:
            $ref: '#/components/schemas/Analysis'
        customTraits:
          type: array
          items:
            type: object
    ContactList:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        total_count:
          type: integer
          format: int32
    ContactInformation:
      type: object
      description: Contains information about how the contact may be contacted.
      properties:
        id:
          type: string
          format: uuid
          example: 223e4567-e89b-12d3-a456-426614174000
        type:
          type: string
          example: email
        value:
          type: string
          example: test@example.com
        validated:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
          example: '2022-08-20T14:00:00Z'
        lastConfirmAt:
          type: string
          format: date-time
          example: '2024-01-10T09:00:00Z'
    ContactInformationList:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ContactInformation'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        total_count:
          type: integer
          format: int32
    Role:
      type: object
      description: Contains information about the roles the contact has held at present and in the past
      properties:
        id:
          type: string
          format: uuid
          example: 323e4567-e89b-12d3-a456-426614174000
        type:
          type: string
          example: apprentice
        startedAt:
          type: string
          format: date-time
          example: '2023-01-15T09:00:00Z'
        completedAt:
          type: string
          format: date-time
          example: '2025-01-15T17:00:00Z'
        isActive:
          type: string
          example: 'true'
        roleInformation:
          type: object
    RoleList:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        total_count:
          type: integer
          format: int32
    Relationship:
      type: object
      description: Define a relationship between two contacts. The relationship will have a type (e.g. parent-child) and a roles for each member in the relationship
      properties:
        id:
          type: string
          format: uuid
          example: 423e4567-e89b-12d3-a456-426614174000
        createdAt:
          type: string
          format: date-time
          example: '2022-03-10T11:00:00Z'
        lastConfirmAt:
          type: string
          format: date-time
          example: '2024-05-20T16:00:00Z'
        endedAt:
          type: string
          format: date-time
          example: '2025-01-01T00:00:00Z'
        primaryParty:
          type: string
          format: uuid
          example: 110e8400-e29b-41d4-a716-446655440000
        relatedParties:
          type: array
          items:
            type: string
            format: uuid
          example:
            - 220e8400-e29b-41d4-a716-446655440000
            - 330e8400-e29b-41d4-a716-446655440000
        type:
          type: string
          example: child
    RelationshipList:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        total_count:
          type: integer
          format: int32
    CommunicationPreference:
      type: object
      description: Includes per-channel (e.g. SMS, email, etc) in an extensible format that can support any channel
      properties:
        id:
          type: string
          format: uuid
          example: 523e4567-e89b-12d3-a456-426614174000
        channel:
          type: string
          example: email
        allowed:
          type: boolean
          example: true
        preferred:
          type: boolean
          example: true
    CommunicationPreferenceList:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/CommunicationPreference'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        total_count:
          type: integer
          format: int32
    SystemLink:
      type: object
      description: Each link describes a reference to the record for the contact in another ssytem, such as an SMS or LMS.
      properties:
        id:
          type: string
          format: uuid
          example: 623e4567-e89b-12d3-a456-426614174000
        system:
          type: string
          example: Canvas
        type:
          type: string
          example: lms
        systemId:
          type: string
          example: canvas_8768778
        link:
          type: string
          nullable: true
    SystemLinkList:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/SystemLink'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        total_count:
          type: integer
          format: int32
    Document:
      type: object
      description: Each document object represents a document about the user, such as a resume or cover letter.
      properties:
        id:
          type: string
          format: uuid
          example: 723e4567-e89b-12d3-a456-426614174000
        type:
          type: string
          example: resume
        link:
          type: string
          example: https://example.com/resume.pdf
        createdAt:
          type: string
          format: date-time
          example: '2023-09-01T12:00:00Z'
    DocumentList:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        total_count:
          type: integer
          format: int32
    Analysis:
      type: object
      description: Contains the results for an analysis (e.g vibrancy index classification) of the contact
      properties:
        id:
          type: string
          format: uuid
          example: 823e4567-e89b-12d3-a456-426614174000
        type:
          type: string
          example: vibrancy-index
        createdAt:
          type: string
          format: date-time
          example: '2024-03-10T10:00:00Z'
        results:
          type: object
    AnalysisList:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Analysis'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        total_count:
          type: integer
          format: int32
    Organisation:
      type: object
      description: Organisation resource
      properties:
        legalName:
          type: string
          example: Skynet Pty Ltd
        tradingName:
          type: string
          example: Skynet
        employer:
          type: object
          properties:
            employerId:
              type: string
              example: '12345678'
        worksite:
          type: object
          properties:
            address:
              type: string
              example: 123 Fake St, Gotham City
            state:
              type: string
              example: ACT
        id:
          type: string
          format: uuid
          example: f969c016-531a-4105-8c64-a84a6b9aedbc
        abn:
          type: string
          example: '12345678901'
    OrganisationList:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Organisation'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        total_count:
          type: integer
          format: int32
    Interaction:
      type: object
      description: An API to record interactions for future reference. Can initially implement writing to DB and then migrate to higher performance approach (e.g. using queues) if required
      properties:
        id:
          type: string
          format: uuid
          example: 923e4567-e89b-12d3-a456-426614174000
        createdAt:
          type: string
          format: date-time
          example: '2024-02-28T18:00:00Z'
        contactId:
          type: string
          format: uuid
          example: 440e8400-e29b-41d4-a716-446655440000
        payload:
          type: object
    SyncedRecord:
      type: object
      description: A record synced from an external system, identified by the system link, by background processing
      properties:
        systemLinkId:
          type: string
          format: uuid
        contactId:
          type: string
          format: uuid
        syncedRecord:
          type: object
    SyncedRecordList:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/SyncedRecord'
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        total_count:
          type: integer
          format: int32
  parameters:
    LimitParam:
      name: limit
      in: query
      description: The number of items to return.
      schema:
        type: integer
        format: int32
    OffsetParam:
      name: offset
      in: query
      description: The number of items to skip before starting to collect the result set.
      schema:
        type: integer
        format: int32

